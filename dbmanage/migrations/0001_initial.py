# Generated by Django 4.2.2 on 2023-10-05 08:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('role', models.CharField(blank=True, choices=[('farmer', 'Farmer'), ('consumer', 'Consumer'), ('mill manager', 'Mill Manager'), ('administrator', 'Administrator'), ('visitor', 'Visitor')], max_length=20, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExtractionOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_oil_mill', models.CharField(blank=True, max_length=50, null=True)),
                ('reception_date', models.DateField()),
                ('start_date', models.DateField()),
                ('finish_date', models.DateField()),
                ('olives_quantity', models.FloatField()),
                ('quantity_unit', models.CharField(default='Tonnes', max_length=10)),
                ('water_per_100kg', models.IntegerField()),
                ('mixing_duration', models.IntegerField()),
                ('time_unit', models.CharField(default='Minutes', max_length=10)),
                ('press_temperature', models.DecimalField(decimal_places=2, max_digits=5)),
                ('filtration_considered', models.BooleanField(default=False)),
                ('separate_mixing_by_variety', models.BooleanField(default=False)),
                ('method', models.CharField(max_length=20)),
                ('produced_quantity', models.FloatField()),
                ('produced_quantity_unit', models.CharField(choices=[('kg', 'Kilograms'), ('l', 'Liters')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Harvest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('harvest_date', models.DateField()),
                ('harvest_method', models.CharField(choices=[('Mn', 'Manual'), ('Mc', 'Mechanical'), ('B', 'Both')], max_length=3)),
                ('quantity', models.FloatField()),
                ('quantity_unit', models.CharField(default='Tonnes', max_length=10)),
                ('maturity_index', models.CharField(choices=[('G', 'Green'), ('P', 'Purple'), ('B', 'Black')], max_length=2)),
                ('characterization', models.CharField(choices=[('Mono', 'Monovarietal'), ('Poly', 'Polyvarietal')], max_length=5)),
                ('classification_by_maturity', models.BooleanField(default=False)),
                ('containers', models.CharField(choices=[('Bg', 'Fabric bags'), ('Pb', 'Plastic bags'), ('Px', 'Plastic boxes'), ('O', 'Other')], max_length=3)),
                ('harvest_picture', models.ImageField(upload_to='images/')),
                ('harvest_code', models.CharField(blank=True, max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='IoTSensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_id', models.CharField(max_length=100, unique=True)),
                ('type', models.CharField(max_length=20)),
                ('constructor', models.CharField(max_length=50)),
                ('deployment_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='OilMill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('address', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50)),
                ('fax', models.CharField(max_length=20)),
                ('website', models.URLField(max_length=255)),
                ('creation_date', models.DateField()),
                ('milling_capacity', models.FloatField()),
                ('transformation_capacity_unit', models.CharField(choices=[('l', 'Liters'), ('kg', 'Kilograms'), ('t', 'Tonnes')], max_length=3)),
                ('chains_number', models.IntegerField()),
                ('has_lab', models.BooleanField(default=False)),
                ('has_pack_unit', models.BooleanField(default=False)),
                ('storage_capacity', models.FloatField()),
                ('storage_capacity_unit', models.CharField(choices=[('l', 'Liters'), ('kg', 'Kilograms'), ('t', 'Tonnes')], max_length=2)),
                ('practice', models.CharField(choices=[('C', 'Conventional'), ('O', 'Organic')], max_length=20)),
                ('quality_certificate', models.CharField(max_length=255)),
                ('agreement_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='OilNeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
                ('quantity_unit', models.CharField(choices=[('kg', 'Kilograms'), ('l', 'Liters')], max_length=3)),
                ('oil_quality', models.CharField(choices=[('EVOO', 'Extra Virgin olive oil'), ('VOO', 'Virgin olive oil'), ('L', 'Lampante olive oil'), ('R', 'Refined olive oil'), ('P', 'Olive pomace oil')], max_length=5)),
                ('flavour', models.CharField(max_length=50)),
                ('price_min', models.DecimalField(decimal_places=3, max_digits=12)),
                ('price_max', models.DecimalField(decimal_places=3, max_digits=12)),
                ('price_unit', models.CharField(choices=[('$', 'Dollars $'), ('€', 'Euros €'), ('TND', 'Tunisian Dinar')], default='€', max_length=3)),
                ('region', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=20)),
                ('need_date', models.DateField()),
                ('production_year', models.DateField()),
                ('packaged', models.BooleanField(default=True)),
                ('cropping_system', models.CharField(choices=[('R', 'Rainfed'), ('I', 'Irrigated')], max_length=2)),
                ('practice', models.CharField(choices=[('C', 'Conventional'), ('O', 'Organic')], max_length=2)),
                ('buyer_category', models.CharField(choices=[('C', 'Consumer'), ('M', 'Oil mill')], max_length=2)),
                ('need_status', models.CharField(choices=[('P', 'Pending'), ('R', 'Responded')], max_length=2)),
                ('status_update_date', models.DateField()),
                ('need_code', models.CharField(blank=True, max_length=255, unique=True)),
                ('oil_mill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='oil_needs', to='dbmanage.oilmill')),
            ],
        ),
        migrations.CreateModel(
            name='OilProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('production_date', models.DateField()),
                ('creation_cause', models.CharField(choices=[('E', 'Extraction'), ('St', 'Storage'), ('P', 'Packaging'), ('B', 'Buying')], max_length=3)),
                ('produced_quantity', models.FloatField()),
                ('remaining_quantity', models.FloatField()),
                ('quantity_unit', models.CharField(choices=[('kg', 'Kilograms'), ('l', 'Liters')], max_length=3)),
                ('quality_control_performed', models.BooleanField(default=False)),
                ('oil_quality', models.CharField(choices=[('EVOO', 'Extra Virgin olive oil'), ('VOO', 'Virgin olive oil'), ('L', 'Lampante olive oil'), ('R', 'Refined olive oil'), ('P', 'Olive pomace oil'), ('N', 'Not defined')], default='N', max_length=5)),
                ('owner_category', models.CharField(choices=[('F', 'Farmer'), ('M', 'Oil mill'), ('C', 'Consumer')], max_length=2)),
                ('storage_date', models.DateField()),
                ('stored_quantity', models.FloatField()),
                ('oil_product_code', models.CharField(blank=True, max_length=255, unique=True)),
                ('extraction_operation', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dbmanage.extractionoperation')),
                ('mother_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_products', to='dbmanage.oilproduct')),
            ],
        ),
        migrations.CreateModel(
            name='OliveGrove',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('is_owner', models.BooleanField(default=False)),
                ('address', models.CharField(max_length=255)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('trees_age', models.IntegerField()),
                ('area', models.FloatField()),
                ('density', models.FloatField()),
                ('olives_variety', models.CharField(max_length=20)),
                ('soil_type', models.CharField(choices=[('SN', 'Sandy'), ('SL', 'Silty'), ('C', 'Clay'), ('L', 'Loamy')], max_length=3)),
                ('fertilizers_used', models.CharField(max_length=255)),
                ('pesticide_sprays', models.BooleanField(default=False)),
                ('cropping_system', models.CharField(choices=[('R', 'Rainfed'), ('I', 'Irrigated')], max_length=2)),
                ('practice', models.CharField(choices=[('C', 'Conventional'), ('O', 'Organic')], max_length=2)),
                ('grove_picture', models.ImageField(upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='OliveNeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
                ('quantity_unit', models.CharField(default='Tonnes', max_length=10)),
                ('price_min', models.DecimalField(decimal_places=3, max_digits=12)),
                ('price_max', models.DecimalField(decimal_places=3, max_digits=12)),
                ('price_unit', models.CharField(choices=[('$', 'Dollars $'), ('€', 'Euros €'), ('TND', 'Tunisian Dinar')], default='€', max_length=3)),
                ('region', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=20)),
                ('need_date', models.DateField()),
                ('olives_variety', models.CharField(max_length=50)),
                ('cropping_system', models.CharField(choices=[('R', 'Rainfed'), ('I', 'Irrigated')], max_length=2)),
                ('practice', models.CharField(choices=[('C', 'Conventional'), ('O', 'Organic')], max_length=2)),
                ('need_status', models.CharField(choices=[('P', 'Pending'), ('R', 'Responded')], max_length=2)),
                ('status_update_date', models.DateField()),
                ('need_code', models.CharField(blank=True, max_length=255, unique=True)),
                ('oil_mill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='olive_needs', to='dbmanage.oilmill')),
            ],
        ),
        migrations.CreateModel(
            name='OlivePurchaseRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_quantity', models.FloatField()),
                ('quantity_unit', models.CharField(default='Tonnes', max_length=10)),
                ('requested_price', models.DecimalField(decimal_places=3, max_digits=12)),
                ('price_unit', models.CharField(choices=[('$', 'Dollars $'), ('€', 'Euros €'), ('TND', 'Tunisian Dinar')], default='€', max_length=3)),
                ('request_date', models.DateField()),
                ('buyer_appreciation', models.IntegerField()),
                ('buyer_feedback', models.CharField(max_length=255)),
                ('request_status', models.CharField(choices=[('P', 'Pending'), ('A', 'Approved'), ('R', 'Rejected'), ('B', 'Bought')], max_length=2)),
                ('status_update_date', models.DateField()),
                ('request_code', models.CharField(blank=True, max_length=255, unique=True)),
                ('mill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='olive_purchase_requests', to='dbmanage.oilmill')),
            ],
        ),
        migrations.CreateModel(
            name='Packaging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('packaging_reference', models.CharField(max_length=255, unique=True)),
                ('packaging_date', models.DateField()),
                ('packaged_quantity', models.IntegerField()),
                ('packaged_quantity_unit', models.CharField(choices=[('kg', 'Kilograms'), ('l', 'Liters')], max_length=3)),
                ('type_of_packaging', models.CharField(choices=[('DGbt', 'Dark Glass Bottles'), ('TGbt', 'Transparent Glass Bottles'), ('Pbt', 'Plastic Bottles'), ('T', 'Tin Cans'), ('Bx', 'Bag In Box'), ('C', 'Ceramic jars')], max_length=4)),
                ('packaging_volume', models.CharField(max_length=50)),
                ('packaging_factory_name', models.CharField(max_length=50)),
                ('factory_address', models.CharField(max_length=255)),
                ('factory_certificate', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offered_price', models.DecimalField(decimal_places=3, max_digits=12)),
                ('price_unit', models.CharField(choices=[('$', 'Dollars $'), ('€', 'Euros €'), ('TND', 'Tunisian Dinar')], default='€', max_length=3)),
                ('offer_date', models.DateField()),
                ('negotiable_price', models.BooleanField(default=False)),
                ('availability', models.DateField(blank=True, null=True)),
                ('offer_code', models.CharField(blank=True, max_length=255, unique=True)),
                ('oil_mill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_offers', to='dbmanage.oilmill')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('considered_quantity', models.FloatField()),
                ('requested_price', models.DecimalField(decimal_places=3, max_digits=12)),
                ('price_unit', models.CharField(choices=[('$', 'Dollars $'), ('€', 'Euros €'), ('TND', 'Tunisian Dinar')], default='€', max_length=3)),
                ('request_date', models.DateField()),
                ('request_status', models.CharField(choices=[('P', 'Pending'), ('R', 'Responded'), ('Cf', 'Confirmed'), ('Ca', 'Cancelled')], max_length=2)),
                ('status_update_date', models.DateField()),
                ('request_code', models.CharField(blank=True, max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('country', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('dbmanage.user',),
        ),
        migrations.CreateModel(
            name='ExtractionOffer',
            fields=[
                ('serviceoffer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dbmanage.serviceoffer')),
                ('offer_status', models.CharField(choices=[('P', 'Pending'), ('A', 'Approved'), ('R', 'Rejected'), ('E', 'Extracted')], max_length=2)),
                ('status_update_date', models.DateField()),
            ],
            bases=('dbmanage.serviceoffer',),
        ),
        migrations.CreateModel(
            name='Farmer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('country', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'Farmers',
            },
            bases=('dbmanage.user',),
        ),
        migrations.CreateModel(
            name='MillManager',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=('dbmanage.user',),
        ),
        migrations.CreateModel(
            name='StorageServiceProposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage_type', models.CharField(max_length=100)),
                ('capacity', models.IntegerField()),
                ('capacity_unit', models.CharField(choices=[('kg', 'Kilograms'), ('l', 'Liters')], max_length=3)),
                ('price', models.DecimalField(decimal_places=3, max_digits=12)),
                ('price_unit', models.CharField(choices=[('$', 'Dollars $'), ('€', 'Euros €'), ('TND', 'Tunisian Dinar')], default='€', max_length=3)),
                ('negotiable_price', models.BooleanField(default=False)),
                ('availability', models.DateField()),
                ('oil_mill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storage_proposals', to='dbmanage.oilmill')),
            ],
        ),
        migrations.CreateModel(
            name='StorageArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('local_type', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=255)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('container_type', models.CharField(max_length=100)),
                ('container_number', models.IntegerField()),
                ('oil_mill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storage_areas', to='dbmanage.oilmill')),
                ('farmer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storage_areas', to='dbmanage.farmer')),
            ],
        ),
        migrations.CreateModel(
            name='SensorMeasurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.CharField(max_length=20)),
                ('value', models.DecimalField(decimal_places=3, max_digits=5)),
                ('date', models.DateField()),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurements', to='dbmanage.iotsensor')),
            ],
        ),
        migrations.CreateModel(
            name='ReceivedFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appreciation', models.IntegerField()),
                ('feedback', models.CharField(max_length=255)),
                ('feedback_cause', models.CharField(choices=[('VS', 'Olive Selling'), ('OS', 'Oil Selling'), ('ES', 'Extraction Service'), ('PS', 'Packaging Service'), ('SS', 'Storage Service'), ('AS', 'Analysis Service'), ('VB', 'Olive Buying'), ('OB', 'Oil Buying')], max_length=3)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_feedbacks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PurchasedOlive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('olive_quantity', models.FloatField()),
                ('quantity_unit', models.CharField(default='Tonnes', max_length=10)),
                ('purchase_date', models.DateField()),
                ('olives_variety', models.CharField(max_length=50)),
                ('maturity_index', models.CharField(choices=[('G', 'Green'), ('P', 'Purple'), ('B', 'Black')], max_length=2)),
                ('characterization', models.CharField(choices=[('Mono', 'Monovarietal'), ('Poly', 'Polyvarietal')], max_length=5)),
                ('classification_by_maturity', models.BooleanField(default=False)),
                ('cropping_system', models.CharField(choices=[('R', 'Rainfed'), ('I', 'Irrigated')], max_length=2)),
                ('practice', models.CharField(choices=[('C', 'Conventional'), ('O', 'Organic')], max_length=2)),
                ('mill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchased_olives', to='dbmanage.oilmill')),
                ('olive_purchase_request', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dbmanage.olivepurchaserequest')),
            ],
        ),
        migrations.CreateModel(
            name='PackagingServiceProposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('packaging_factory_name', models.CharField(max_length=50)),
                ('factory_address', models.CharField(max_length=255)),
                ('factory_certificate', models.CharField(max_length=255)),
                ('type_of_packaging', models.CharField(choices=[('DGbt', 'Dark Glass Bottles'), ('TGbt', 'Transparent Glass Bottles'), ('Pbt', 'Plastic Bottles'), ('T', 'Tin Cans'), ('Bx', 'Bag In Box'), ('C', 'Ceramic jars')], max_length=4)),
                ('packaging_volume', models.CharField(max_length=50)),
                ('price', models.DecimalField(decimal_places=3, max_digits=12)),
                ('price_unit', models.CharField(choices=[('$', 'Dollars $'), ('€', 'Euros €'), ('TND', 'Tunisian Dinar')], default='€', max_length=3)),
                ('negotiable_price', models.BooleanField(default=False)),
                ('availability', models.DateField()),
                ('oil_mill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packaging_proposals', to='dbmanage.oilmill')),
            ],
        ),
        migrations.CreateModel(
            name='OliveSaleOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_quantity_for_sell', models.FloatField()),
                ('quantity_unit', models.CharField(default='Tonnes', max_length=10)),
                ('available_quantity_for_sell', models.FloatField()),
                ('offer_price', models.DecimalField(decimal_places=3, max_digits=12)),
                ('price_unit', models.CharField(choices=[('$', 'Dollars $'), ('€', 'Euros €'), ('TND', 'Tunisian Dinar')], default='€', max_length=3)),
                ('availability_date', models.DateField()),
                ('transportation', models.CharField(choices=[('D', 'Delivered'), ('R', 'Recovered locally')], max_length=2)),
                ('creation_date', models.DateField()),
                ('update_date', models.DateField()),
                ('offer_status', models.CharField(choices=[('A', 'Available'), ('Cl', 'Closed'), ('Ca', 'Cancelled')], default='A', max_length=3)),
                ('offer_code', models.CharField(blank=True, max_length=255, unique=True)),
                ('creation_cause_need', models.BooleanField(default=False)),
                ('harvest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbmanage.harvest')),
                ('olive_need', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='olive_sale_offers', to='dbmanage.oliveneed')),
            ],
        ),
        migrations.AddField(
            model_name='olivepurchaserequest',
            name='olive_sale_offer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='olive_purchase_requests', to='dbmanage.olivesaleoffer'),
        ),
        migrations.CreateModel(
            name='OilSaleOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_quantity_for_sell', models.FloatField()),
                ('available_quantity_for_sell', models.FloatField()),
                ('quantity_unit', models.CharField(choices=[('kg', 'Kilograms'), ('l', 'Liters')], max_length=3)),
                ('offered_price', models.DecimalField(decimal_places=3, max_digits=12)),
                ('price_unit', models.CharField(choices=[('$', 'Dollars $'), ('€', 'Euros €'), ('TND', 'Tunisian Dinar')], default='€', max_length=3)),
                ('transportation', models.CharField(choices=[('D', 'Delivered'), ('R', 'Recovered locally')], max_length=2)),
                ('creation_date', models.DateField()),
                ('update_date', models.DateField()),
                ('type_of_packaging', models.CharField(choices=[('DGbt', 'Dark Glass Bottles'), ('TGbt', 'Transparent Glass Bottles'), ('Pbt', 'Plastic Bottles'), ('T', 'Tin Cans'), ('Bx', 'Bag In Box'), ('C', 'Ceramic jars')], max_length=4)),
                ('packaging_volume', models.CharField(max_length=50)),
                ('offer_status', models.CharField(choices=[('A', 'Available'), ('Cl', 'Closed'), ('Ca', 'Cancelled')], max_length=3)),
                ('offer_code', models.CharField(blank=True, max_length=255, unique=True)),
                ('analysis_file', models.FileField(blank=True, null=True, upload_to='analysis_files/')),
                ('creation_cause_need', models.BooleanField(default=False)),
                ('mother_offer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_offers', to='dbmanage.oilsaleoffer')),
                ('oil_mill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='oil_sale_offers', to='dbmanage.oilmill')),
                ('oil_need', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='oil_sale_offers', to='dbmanage.oilneed')),
                ('oil_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_offers', to='dbmanage.oilproduct')),
                ('farmer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='oil_sale_offers', to='dbmanage.farmer')),
            ],
        ),
        migrations.AddField(
            model_name='oilproduct',
            name='packaging',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dbmanage.packaging'),
        ),
        migrations.AddField(
            model_name='oilproduct',
            name='storage_area',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dbmanage.storagearea'),
        ),
        migrations.CreateModel(
            name='OilAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_reference', models.CharField(max_length=255, unique=True)),
                ('analysis_date', models.DateField()),
                ('lab_name', models.CharField(max_length=50)),
                ('lab_address', models.CharField(max_length=255)),
                ('lab_agreement', models.CharField(max_length=255)),
                ('lab_agreement_date', models.DateField()),
                ('fatty_acid', models.CharField(max_length=20)),
                ('acidity', models.CharField(max_length=20)),
                ('peroxide_value', models.CharField(max_length=20)),
                ('UV_absorbance', models.CharField(max_length=20)),
                ('analysis_file', models.FileField(blank=True, null=True, upload_to='analysis_files/')),
                ('oil_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis', to='dbmanage.oilproduct')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('oil_mill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dbmanage.oilmill')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_reference', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=20)),
                ('constructor', models.CharField(max_length=50)),
                ('purchase_date', models.DateField()),
                ('capacity', models.IntegerField()),
                ('type', models.CharField(choices=[('T', 'Traditional'), ('S', 'Super press'), ('Co', 'Continuous one phase'), ('Ct', 'Continuous two phases')], max_length=3)),
                ('oil_mill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='machines', to='dbmanage.oilmill')),
            ],
        ),
        migrations.AddField(
            model_name='iotsensor',
            name='storage_area',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensors', to='dbmanage.storagearea'),
        ),
        migrations.AddField(
            model_name='harvest',
            name='grove',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='harvests', to='dbmanage.olivegrove'),
        ),
        migrations.CreateModel(
            name='ExtractionServiceProposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.IntegerField()),
                ('capacity_unit', models.CharField(choices=[('kg', 'Kilograms'), ('t', 'Tonnes')], max_length=3)),
                ('machine_type', models.CharField(choices=[('T', 'Traditional'), ('S', 'Super press'), ('Co', 'Continuous one phase'), ('Ct', 'Continuous two phases')], max_length=3)),
                ('practice', models.CharField(choices=[('C', 'Conventional'), ('O', 'Organic')], max_length=2)),
                ('price', models.DecimalField(decimal_places=3, max_digits=12)),
                ('negotiable_price', models.BooleanField(default=False)),
                ('availability', models.DateField()),
                ('oil_mill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extraction_proposals', to='dbmanage.oilmill')),
            ],
        ),
        migrations.AddField(
            model_name='extractionoperation',
            name='harvest',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dbmanage.harvest'),
        ),
        migrations.AddField(
            model_name='extractionoperation',
            name='oil_mill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extractions', to='dbmanage.oilmill'),
        ),
        migrations.AddField(
            model_name='extractionoperation',
            name='purchased_olives',
            field=models.ManyToManyField(blank=True, to='dbmanage.purchasedolive'),
        ),
        migrations.AddField(
            model_name='extractionoperation',
            name='used_machines',
            field=models.ManyToManyField(to='dbmanage.machine'),
        ),
        migrations.CreateModel(
            name='AnalysisServiceProposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lab_name', models.CharField(max_length=50)),
                ('lab_address', models.CharField(max_length=255)),
                ('lab_agreement', models.CharField(max_length=255)),
                ('fatty_acid', models.BooleanField(default=False)),
                ('sensory_description', models.BooleanField(default=False)),
                ('peroxide_value', models.BooleanField(default=False)),
                ('UV_absorbance', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=3, max_digits=12)),
                ('price_unit', models.CharField(choices=[('$', 'Dollars $'), ('€', 'Euros €'), ('TND', 'Tunisian Dinar')], default='€', max_length=3)),
                ('oil_mill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_proposals', to='dbmanage.oilmill')),
            ],
        ),
        migrations.CreateModel(
            name='StorageRequest',
            fields=[
                ('servicerequest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dbmanage.servicerequest')),
                ('quantity_unit', models.CharField(choices=[('kg', 'Kilograms'), ('l', 'Liters')], max_length=3)),
                ('storage_condition', models.CharField(blank=True, max_length=100, null=True)),
                ('oil_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storage_requests', to='dbmanage.oilproduct')),
            ],
            bases=('dbmanage.servicerequest',),
        ),
        migrations.CreateModel(
            name='StorageOffer',
            fields=[
                ('serviceoffer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dbmanage.serviceoffer')),
                ('offer_status', models.CharField(choices=[('P', 'Pending'), ('A', 'Approved'), ('R', 'Rejected'), ('S', 'Stored')], max_length=2)),
                ('status_update_date', models.DateField()),
                ('storage_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storage_offers', to='dbmanage.storagerequest')),
            ],
            bases=('dbmanage.serviceoffer',),
        ),
        migrations.AddField(
            model_name='servicerequest',
            name='farmer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_requests', to='dbmanage.farmer'),
        ),
        migrations.CreateModel(
            name='PackagingRequest',
            fields=[
                ('servicerequest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dbmanage.servicerequest')),
                ('quantity_unit', models.CharField(choices=[('kg', 'Kilograms'), ('l', 'Liters')], max_length=3)),
                ('type_of_packaging', models.CharField(blank=True, choices=[('DGbt', 'Dark Glass Bottles'), ('TGbt', 'Transparent Glass Bottles'), ('Pbt', 'Plastic Bottles'), ('T', 'Tin Cans'), ('Bx', 'Bag In Box'), ('C', 'Ceramic jars')], max_length=4, null=True)),
                ('packaging_volume', models.CharField(blank=True, max_length=50, null=True)),
                ('oil_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packaging_requests', to='dbmanage.oilproduct')),
            ],
            bases=('dbmanage.servicerequest',),
        ),
        migrations.CreateModel(
            name='PackagingOffer',
            fields=[
                ('serviceoffer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dbmanage.serviceoffer')),
                ('offer_status', models.CharField(choices=[('P', 'Pending'), ('A', 'Approved'), ('R', 'Rejected'), ('Pk', 'Packaged')], max_length=2)),
                ('status_update_date', models.DateField()),
                ('packaging_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packaging_offers', to='dbmanage.packagingrequest')),
            ],
            bases=('dbmanage.serviceoffer',),
        ),
        migrations.AddField(
            model_name='olivegrove',
            name='farmer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbmanage.farmer'),
        ),
        migrations.CreateModel(
            name='OilPurchaseRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_quantity', models.IntegerField()),
                ('quantity_unit', models.CharField(choices=[('kg', 'Kilograms'), ('l', 'Liters')], max_length=3)),
                ('requested_price', models.DecimalField(decimal_places=3, max_digits=12)),
                ('price_unit', models.CharField(choices=[('$', 'Dollars $'), ('€', 'Euros €'), ('TND', 'Tunisian Dinar')], default='€', max_length=3)),
                ('request_date', models.DateField()),
                ('buyer_category', models.CharField(choices=[('C', 'Consumer'), ('M', 'Oil mill')], max_length=2)),
                ('buyer_appreciation', models.IntegerField()),
                ('buyer_feedback', models.CharField(max_length=255)),
                ('request_status', models.CharField(choices=[('P', 'Pending'), ('A', 'Approved'), ('R', 'Rejected'), ('B', 'Bought')], max_length=2)),
                ('status_update_date', models.DateField()),
                ('request_code', models.CharField(blank=True, max_length=255, unique=True)),
                ('oil_mill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='oil_purchase_requests', to='dbmanage.oilmill')),
                ('oil_sale_offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbmanage.oilsaleoffer')),
                ('consumer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='oil_purchase_requests', to='dbmanage.consumer')),
            ],
        ),
        migrations.AddField(
            model_name='oilneed',
            name='consumer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='oil_needs', to='dbmanage.consumer'),
        ),
        migrations.AddField(
            model_name='oilmill',
            name='mill_manager',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dbmanage.millmanager'),
        ),
        migrations.CreateModel(
            name='ExtractionRequest',
            fields=[
                ('servicerequest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dbmanage.servicerequest')),
                ('quantity_unit', models.CharField(default='Tonnes', max_length=10)),
                ('method', models.CharField(max_length=20)),
                ('harvest', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='extraction_requests', to='dbmanage.harvest')),
            ],
            bases=('dbmanage.servicerequest',),
        ),
        migrations.AddField(
            model_name='extractionoperation',
            name='extraction_offer',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dbmanage.extractionoffer'),
        ),
        migrations.AddField(
            model_name='extractionoffer',
            name='extraction_request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extraction_offers', to='dbmanage.extractionrequest'),
        ),
        migrations.CreateModel(
            name='AnalysisRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_type_1', models.CharField(blank=True, choices=[('F', 'Fatty Acid'), ('P', 'Peroxide value'), ('U', 'UV absorbance'), ('A', 'Acidity')], max_length=2, null=True)),
                ('analysis_type_2', models.CharField(blank=True, choices=[('F', 'Fatty Acid'), ('P', 'Peroxide value'), ('U', 'UV absorbance'), ('A', 'Acidity')], max_length=2, null=True)),
                ('analysis_type_3', models.CharField(blank=True, choices=[('F', 'Fatty Acid'), ('P', 'Peroxide value'), ('U', 'UV absorbance'), ('A', 'Acidity')], max_length=2, null=True)),
                ('analysis_type_4', models.CharField(blank=True, choices=[('F', 'Fatty Acid'), ('P', 'Peroxide value'), ('U', 'UV absorbance'), ('A', 'Acidity')], max_length=2, null=True)),
                ('request_date', models.DateField()),
                ('request_status', models.CharField(choices=[('P', 'Pending'), ('R', 'Responded'), ('Cf', 'Confirmed'), ('Ca', 'Cancelled')], max_length=2)),
                ('status_update_date', models.DateField()),
                ('request_code', models.CharField(blank=True, max_length=255, unique=True)),
                ('oil_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_requests', to='dbmanage.oilproduct')),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_requests', to='dbmanage.farmer')),
            ],
        ),
        migrations.CreateModel(
            name='AnalysisOffer',
            fields=[
                ('serviceoffer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dbmanage.serviceoffer')),
                ('offer_status', models.CharField(choices=[('P', 'Pending'), ('A', 'Approved'), ('R', 'Rejected'), ('An', 'Analysed')], max_length=2)),
                ('status_update_date', models.DateField()),
                ('analysis_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_offers', to='dbmanage.analysisrequest')),
            ],
            bases=('dbmanage.serviceoffer',),
        ),
    ]
